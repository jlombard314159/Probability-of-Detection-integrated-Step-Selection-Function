% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdissf.R
\name{pdissf}
\alias{pdissf}
\title{pdissf}
\usage{
pdissf(
habitatDF,
habitatCellID,
CellID,
maximumGap = 3,
iSSFCovars = NULL,
probDetCovars = NULL,
distColumns = NULL
)
}
\arguments{
\item{habitatDF}{Dataframe of habitat information}

\item{CellID}{Column in the habitat DF that contains unique IDs for 
the habitat data. Some will have been used and also in the vector of CellID.}

\item{habitatCellID}{Column that contains the ID for cells in the study area 
as they were used by the animal (order is important). Should have IDs found 
in habitatCellID. Missing fixes should contain 'NA'.}

\item{maximumGap}{Maximum allowable number of consecutive missing fixes. 
Default is 3 (3 consecutive missing locations). Large gaps will cause an 
exponential increase in memory requirements and computing time. This may 
result in convergence issues.}

\item{iSSFCovars}{covariates in the integrated step selection function model}

\item{probDetCovars}{covariates for the probability of detection}

\item{distColumns}{If distance is needed as a covariate, in either iSSF or the
probability of detection, then identify the columns that contain this information.
These need to be in UTM.}
}
\description{
Helper function to set up the log-likelihood estimation
}
\examples{
library(PDiSSF)
data(exampleHabitat)
data(exampleLocations)

# Fix success rate
mean(!is.na(locations$unitID))

# Computing time for larger data sets may vary WIDEL

# integrated step selection function (iSSF) using step length,
library(PDiSSF)
# fit iSSF
# takes ~2 minutes
pdissf(habitatDF = habitat,
      CellID = locations$unitID,
      habitatCellID = 'unitID',
      iSSFCovars = c("ab", "dcfe", "drds", "distance"),
      probDetCovars = NULL,
      distColumns  = c("ealbers","nalbers"),
      maximumGap = 3)


# fit PDiSSF
# takes ~50 minutes
pdissf(habitatDF = habitat,
       CellID = locations$unitID,
       habitatCellID = 'unitID',
       iSSFCovars = c("ab", "dcfe", "drds", "distance"),
       probDetCovars = c("cc75"),
       distColumns  = c("ealbers","nalbers"),
       maximumGap = 3)


}
